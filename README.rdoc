= watirgrid

WatirGrid allows for distributed testing across a grid network using Watir.

Basic instructions are:

Pick a server to host the 'controller' for the ring server and execute the following:
  $ ./controller.rb -l INFO

This should find your external facing IP and start the corresponding DRb and Ring Servers:
  DRb server started on : druby://192.168.1.105:11235
  Ring server started on: druby://192.168.1.105:12358

On each client PC, host the 'provider' for the distributed (DRb) Watir objects
  $  ./provider.rb -l INFO

This should find the recently started Ring Server and register a tuple for the Watir object:
  DRb server started on : druby://192.168.1.105:64864
  New tuple registered  : druby://192.168.1.105:12358

You will now be able to execute commands across remote browsers on your grid network.

Check the watirgid_spec.rb for some examples ...

e.g.
  grid = WatirGrid.new(:ring_server_port => 12358)
  grid.start
  grid.read_all
  threads = []
  grid.browsers.each { |browser|
      threads << Thread.new do 
          browser.goto("http://www.google.com")
          browser.text_field(:name, 'q').set("watirgrid")
          browser.button(:name, "btnI").click
      end
  }
  threads.each {|thread| thread.join}


For more help see:
  $  ./controller.rb -h
  Usage: controller.rb [options]
  Specific options:
    -d, --drb-server-port PORT       Specify DRb Server port to listen on
    -r, --ring-server-port PORT      Specify Ring Server port to listen on
    -l, --log-level LEVEL            Specify log level {DEBUG|INFO|ERROR}
    -h, --help                       Show this message
    
  $  ./provider.rb -h
  Usage: provider.rb [options]
  Specific options:
    -r, --ring-server-port PORT      Specify Ring Server port to broadcast on
    -b, --browser-type TYPE          Specify browser type to register {ie|firefox|safari}
    -l, --log-level LEVEL            Specify log level {DEBUG|INFO|ERROR}
    -h, --help                       Show this message
  
I'll update the wiki soon'ish!

== Copyright

Copyright (c) 2009 Tim Koopmans. See LICENSE for details.
